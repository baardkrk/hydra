---
- name: Copy downloaded files.
  when: tmp_fs_mounted.changed
  block:
    - name: Copy rootfs to compute filesystems.
      become: true
      ansible.posix.synchronize:
        src: /tmp/image/rootmnt/
        dest: "/mnt/usb/{{ item.hostname }}"
      delegate_to: "{{ inventory_hostname }}"
    
    - name: Copy firmware to compute filesystems.
      become: true
      ansible.posix.synchronize:
        src: /tmp/image/bootmnt/
        dest: "/mnt/usb/{{ item.hostname }}/boot/firmware"
      delegate_to: "{{ inventory_hostname }}"

- name: Create tftpboot directory.
  become: true
  ansible.builtin.file:
    dest: "/mnt/usb/tftpboot/{{ item.serial }}"
    state: directory
    owner: tftp
    group: tftp

- name: Pass arguments to the Linux kernel.
  become: true
  ansible.builtin.copy:
    dest: "/mnt/usb/{{ item.hostname }}/boot/firmware/cmdline.txt"
    content: "console=serial0,115200 console=tty root=/dev/nfs nfsroot={{ cluster_network_portion }}.1:/mnt/usb/{{ item.hostname }},vers=3 rw ip=dhcp rootwait" 

- name: Enable ssh user on compute node.
  become: true
  ansible.builtin.file:
    dest: "/mnt/usb/{{ item.hostname }}/boot/firmware/ssh"
    state: touch

# Generate string for userconf.txt by:
# echo $USER:$(echo 'raspberry' | openssl passwd -6 -stdin) > userconf.txt
- name: Create a user on the compute node.
  become: true
  ansible.builtin.copy:
    dest: "/mnt/usb/{{ item.hostname }}/boot/firmware/userconf.txt"
    content: "{{ ansible_user_id }}:$6$8QJGtrO8JGElEdP3$/g6J1envjW3PKSz0M7fXYD2LkkV0yqGOViR5v5aeHeh4igDxhgmJBJH70RI16CYAprH1TU67UFdxrktw8UbH0."
    owner: root
    group: root
    mode: "644"

- name: Synchronize the tftpboot files.
  become: true
  ansible.posix.synchronize:
    src: "/mnt/usb/{{ item.hostname }}/boot/firmware/"
    dest: "/mnt/usb/tftpboot/{{ item.serial }}"
  delegate_to: "{{ inventory_hostname }}"

- name: Ensure correct ownership of the tftpboot directories.
  become: true
  ansible.builtin.file:
    dest: "/mnt/usb/tftpboot/{{ item.serial }}"
    state: directory
    owner: tftp
    group: tftp

- name: Remove UUID lines from fstab.
  become: true
  ansible.builtin.lineinfile:
    path: "/mnt/usb/{{ item.hostname }}/etc/fstab"
    regexp: ".*UUID.*"
    state: absent

- name: Configure fstab on compute node.
  become: true
  ansible.builtin.lineinfile:
    path: "/mnt/usb/{{ item.hostname }}/etc/fstab"
    line: "{{ cluster_network_portion }}.1:/mnt/usb/tftpboot/{{ item.serial }} /boot/firmware nfs defaults,vers=3 0 0"
    create: true

- name: Configure fstab on head node.
  become: true
  ansible.builtin.lineinfile:
    path: /etc/fstab
    line: "/mnt/usb/{{ item.hostname }}/boot/firmware /mnt/usb/tftpboot/{{ item.serial }} none defaults,bind 0 0"
    create: true

- name: Copy default sshd_config file.
  become: true
  ansible.builtin.copy:
    dest: "/mnt/usb/{{ item.hostname }}/etc/ssh/sshd_config"
    src: compute_node_sshd_conf
    owner: root
    group: root
    mode: "644"

- name: Make sure `.ssh` directory exists.
  become: true
  ansible.builtin.file:
    dest: "/mnt/usb/{{ item.hostname }}/home/{{ ansible_user_id }}/.ssh"
    state: directory
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0700"

- name: Add ssh key(s).
  become: true
  ansible.builtin.copy:
    dest: "/mnt/usb/{{ item.hostname }}/home/{{ ansible_user_id }}/.ssh/authorized_keys"
    src: authorized_keys
    owner: "{{ ansible_user_id }}"
    group: "{{ ansible_user_id }}"
    mode: "0600"

- name: Set hostname file.
  become: true
  ansible.builtin.copy:
    dest: "/mnt/usb/{{ item.hostname }}/etc/hostname"
    content: "{{ item.hostname }}"
    mode: "644"

- name: Configure hosts.
  become: true
  ansible.builtin.template:
    src: hosts.j2
    dest: "/mnt/usb/{{ item.hostname }}/etc/hosts"
